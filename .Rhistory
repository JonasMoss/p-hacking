pretty(get_sds(ma_anderson_best)))),
msd(cbind(pretty(loo_anderson_worst_means, nsmall = 0),
pretty(get_means(ma_anderson_worst))),
cbind(pretty(loo_anderson_worst_sds, nsmall = 0),
pretty(get_sds(ma_anderson_worst)))))
tables_cuddy = list(msd(cbind(pretty(loo_cuddy_means, nsmall = 0),
pretty(get_means(ma_cuddy2018))),
cbind(pretty(loo_cuddy_sds, nsmall = 0),
pretty(get_sds(ma_cuddy2018)))),
msd(cbind(pretty(loo_no_means, nsmall = 0),
pretty(get_means(ma_cuddy2018_no))),
cbind(pretty(loo_no_sds, nsmall = 0),
pretty(get_sds(ma_cuddy2018_no)))))
add_names = function(tab) {
rownames(tab) = c("uncorrected",
"\\emph{p}-hacking",
"publication bias")
colnames(tab) = c("LOOIC",
"\\multicolumn{1}{c}{$\\theta_{0}$}",
"\\multicolumn{1}{c}{$\\tau$}",
"\\multicolumn{1}{c}{$\\pi_{1}/\\rho_{1}$}",
"\\multicolumn{1}{c}{$\\pi_{2}/\\rho_{2}$}")
tab
}
one_table = function(tab) {
tab = xtable::xtable(add_names(tab))
xtable::align(tab) = c("l", rep("r", 5))
tab = print(tab, sanitize.rownames.function = identity,
sanitize.colnames.function = identity,
hline.after = c(0, 3), print.results = FALSE)
tab = readLines(textConnection(tab))[6:11]
tab = gsub("(NaN)", "", tab, fixed = TRUE)
gsub("NaN", "", tab, fixed = TRUE)
}
### ============================================================================
### Now we make the numbers into tables.
### ============================================================================
anderson_table =
c("%% This document is generated by R: DO NOT EDIT BY HAND!",
"\\begin{table}",
"\\noindent",
"\\caption{\\label{tab:Anderson2010}Violent video games example: Posterior means for LOOICs and parameters (mean effect $\\theta$, standard deviation $\\tau$, probabilities of \\emph{p}-hacking $\\pi$/probabilities of being published $\\rho$) of the \\emph{p}-hacking, publication bias, and classical meta-analysis (uncorrected) model estimated on the aggressive behavior data from \\citet{anderson2010violent}. Posterior standard deviations are reported between brackets.}",
"\\begin{center}%",
"\\begin{tabular}{lcccccccccc}",
"\\multicolumn{11}{c}{\\bf All Experiments} \\tabularnewline",
one_table(tables_anderson[[1]]),
"\\tabularnewline",
"\\multicolumn{11}{c}{\\bf Only Best Practice Experiments} \\tabularnewline",
one_table(tables_anderson[[2]]),
"\\tabularnewline",
"\\multicolumn{11}{c}{\\bf Without Best Practice Experiments} \\tabularnewline",
one_table(tables_anderson[[3]]),
"\\end{tabular}",
"\\end{center}",
"\\end{table}")
writeLines(anderson_table, "tables/anderson2010.tex")
cuddy_table =
c("%% This document is generated by R: DO NOT EDIT BY HAND!",
"\\begin{table}",
"\\caption{\\label{tab:cuddy2018} Power posing example: Posterior means for LOOICs and parameters (mean effect $\\theta$, standard deviation $\\tau$, probabilities of \\emph{p}-hacking $\\pi$/probabilities of being published $\\rho$) of the \\emph{p}-hacking, publication bias, and classical meta-analysis (uncorrected) model estimated on the data by \\citet{cuddy2018p}. The results in the top table are obtained with all studies, those in the bottom without the outlier $x_{12}$. Posterior standard deviations are reported between brackets.}",
"\\noindent",
"\\begin{center}%",
"\\begin{tabular}{lrrrrrrrrr}",
"\\multicolumn{10}{c}{\\bf All studies}\\\\",
one_table(tables_cuddy[[1]]),
"\\tabularnewline",
"\\multicolumn{10}{c}{\\bf Without outlier}\\\\",
one_table(tables_cuddy[[2]]),
"\\end{tabular}",
"\\end{center}",
"\\end{table}")
writeLines(cuddy_table, "tables/cuddy2018.tex")
# This function is used to avoid cluttering the environment when plotting.
.H = function(expr) rlang::new_function(alist(), substitute(expr))()
### ============================================================================
### Anderson example
### ============================================================================
.H({
jpeg("plots/anderson2010.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
par(mar = par("mar") + c(0, 0, 0, 1))
z = seq(0, 1000, by = 0.1)
par(las = 1)
plot(x = 1/anderson$vi,
y = anderson$yi,
log = "x",
xlab = "Precision, log scale", ylab = "Estimated effect size",
pch = anderson$best*19)
lines(x = z,
y = 1.96*sqrt(1/z), lty = 3)
lines(x = z,
y = 1.64*sqrt(1/z), lty = 2)
abline(h = publipha::extract_theta0(ma_anderson_best$cma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_anderson_worst$cma), lwd = 1, col = "grey")
ticks = c(publipha::extract_theta0(ma_anderson_best$cma),
publipha::extract_theta0(ma_anderson_worst$cma))
axis(side = 4, at = ticks, labels = round(ticks, 2))
dev.off()
})
# Posterior for theta
.H({
jpeg("plots/anderson_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 16), xlim = c(-0.1, .5), lwd = 2, xlab = expression(theta[0]),
main = NA)
lines(density((extract_theta0(ma_anderson_all$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_all$phma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
# Comparison of posteriors.
.H({
jpeg("plots/anderson_posterior_1.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$psma, identity), adjust = 3),
ylim = c(0, 15), xlim = c(-0.5, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$psma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
.H({
jpeg("plots/anderson_posterior_2.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 15), xlim = c(-0.1, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$cma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$cma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
### ============================================================================
### Cuddy example.
### ============================================================================
.H({
jpeg("plots/cuddy2018.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
par(mar = par("mar") + c(0, 0, 0, 1))
z = seq(0, 1000, by = 0.1)
par(las = 1)
plot(x = 1/dat.cuddy2018$vi,
y = dat.cuddy2018$yi,
pch = 19, log = "x",
ylim = c(-0.1, 1.7),
xlab = "Precision, log scale",
ylab = "Estimated effect size")
lines(x = z, y = 1.96*sqrt(1/z), lty = 3)
lines(x = z, y = 1.64*sqrt(1/z), lty = 2)
abline(h = publipha::extract_theta0(ma_cuddy2018$cma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_cuddy2018$psma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_cuddy2018$phma), lwd = 1, col = "grey")
ticks = c(publipha::extract_theta0(ma_cuddy2018$cma),
publipha::extract_theta0(ma_cuddy2018$psma),
publipha::extract_theta0(ma_cuddy2018$phma))
axis(side = 4, at = ticks, labels = round(ticks, 2))
dev.off()
})
# Posterior for theta
.H({
jpeg("plots/cuddy2018_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
index = 4
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-0.7, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
dev.off()
})
plot(density(extract_theta0(ma_anderson_all$psma, identity), adjust = 3),
ylim = c(0, 15), xlim = c(-0.5, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$psma, identity)), adjust = 3),
lty = 2, lwd = 2)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 16), xlim = c(-0.1, .5), lwd = 2, xlab = expression(theta[0]),
main = NA)
lines(density((extract_theta0(ma_anderson_all$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_all$phma, identity)), adjust = 3),
lty = 2, lwd = 2)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 17), xlim = c(-0.1, .5), lwd = 2, xlab = expression(theta[0]),
main = NA)
lines(density((extract_theta0(ma_anderson_all$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_all$phma, identity)), adjust = 3),
lty = 2, lwd = 2)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 17), xlim = c(-0.1, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$cma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$cma, identity)), adjust = 3),
lty = 2, lwd = 2)
# This function is used to avoid cluttering the environment when plotting.
.H = function(expr) rlang::new_function(alist(), substitute(expr))()
### ============================================================================
### Anderson example
### ============================================================================
.H({
jpeg("plots/anderson2010.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
par(mar = par("mar") + c(0, 0, 0, 1))
z = seq(0, 1000, by = 0.1)
par(las = 1)
plot(x = 1/anderson$vi,
y = anderson$yi,
log = "x",
xlab = "Precision, log scale", ylab = "Estimated effect size",
pch = anderson$best*19)
lines(x = z,
y = 1.96*sqrt(1/z), lty = 3)
lines(x = z,
y = 1.64*sqrt(1/z), lty = 2)
abline(h = publipha::extract_theta0(ma_anderson_best$cma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_anderson_worst$cma), lwd = 1, col = "grey")
ticks = c(publipha::extract_theta0(ma_anderson_best$cma),
publipha::extract_theta0(ma_anderson_worst$cma))
axis(side = 4, at = ticks, labels = round(ticks, 2))
dev.off()
})
# Posterior for theta
.H({
jpeg("plots/anderson_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 17), xlim = c(-0.1, .5), lwd = 2, xlab = expression(theta[0]),
main = NA)
lines(density((extract_theta0(ma_anderson_all$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_all$phma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
# Comparison of posteriors.
.H({
jpeg("plots/anderson_posterior_1.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$psma, identity), adjust = 3),
ylim = c(0, 17), xlim = c(-0.5, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$psma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$psma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
.H({
jpeg("plots/anderson_posterior_2.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
plot(density(extract_theta0(ma_anderson_all$cma, identity), adjust = 3),
ylim = c(0, 17), xlim = c(-0.1, .5), lwd = 2, main = NA,
xlab = expression(theta[0]))
lines(density((extract_theta0(ma_anderson_best$cma, identity)), adjust = 3),
lty = 3, lwd = 2)
lines(density((extract_theta0(ma_anderson_worst$cma, identity)), adjust = 3),
lty = 2, lwd = 2)
dev.off()
})
### ============================================================================
### Cuddy example.
### ============================================================================
.H({
jpeg("plots/cuddy2018.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
par(mar = par("mar") + c(0, 0, 0, 1))
z = seq(0, 1000, by = 0.1)
par(las = 1)
plot(x = 1/dat.cuddy2018$vi,
y = dat.cuddy2018$yi,
pch = 19, log = "x",
ylim = c(-0.1, 1.7),
xlab = "Precision, log scale",
ylab = "Estimated effect size")
lines(x = z, y = 1.96*sqrt(1/z), lty = 3)
lines(x = z, y = 1.64*sqrt(1/z), lty = 2)
abline(h = publipha::extract_theta0(ma_cuddy2018$cma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_cuddy2018$psma), lwd = 1, col = "grey")
abline(h = publipha::extract_theta0(ma_cuddy2018$phma), lwd = 1, col = "grey")
ticks = c(publipha::extract_theta0(ma_cuddy2018$cma),
publipha::extract_theta0(ma_cuddy2018$psma),
publipha::extract_theta0(ma_cuddy2018$phma))
axis(side = 4, at = ticks, labels = round(ticks, 2))
dev.off()
})
# Posterior for theta
.H({
jpeg("plots/cuddy2018_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
index = 4
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-0.7, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
dev.off()
})
library("publipha")
n_chains = 8
alpha = c(0, 0.025, 0.05, 1)
seed = 313
## Run the models.
set.seed(seed)
ma_cuddy2018 = allma(yi = yi,
vi = vi,
data = dat.cuddy2018,
alpha = alpha,
chains = n_chains,
control = list(adapt_delta = 0.9999))
set.seed(seed)
ma_cuddy2018_no = allma(yi = yi,
vi = vi,
data = dplyr::filter(dat.cuddy2018, yi < 1.5),
alpha = alpha,
chains = n_chains,
control = list(adapt_delta = 0.9999))
## Make the loos.
loo_cuddy = lapply(ma_cuddy2018,loo)
loo_cuddy_means = lapply(loo_cuddy, function(x) x$estimates[3, 1])[c(3, 1, 2)]
loo_cuddy_sds = lapply(loo_cuddy, function(x) x$estimates[3, 2])[c(3, 1, 2)]
loo_no = lapply(ma_cuddy2018_no,loo)
loo_no_means = lapply(loo_no, function(x) x$estimates[3, 1])[c(3, 1, 2)]
loo_no_sds = lapply(loo_no, function(x) x$estimates[3, 2])[c(3, 1, 2)]
loo_cuddy_means
index = 4
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-0.7, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
index = 1
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-0.7, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
dat.cuddy2018
index = 2
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-0.7, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
index = 2
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-1.3, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
.H({
jpeg("plots/cuddy2018_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
index = 2
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-1.3, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
dev.off()
})
dat.cuddy2018[, 2]
dat.cuddy2018[2, ]
dat.cuddy2018[2, ]$yi
publipha::extract_theta(ma_cuddy2018$psma)
## Auxilliary values
publipha::extract_theta(ma_cuddy2018$psma, mean)
## Auxilliary values
mean(publipha::extract_theta(ma_cuddy2018$psma))
publipha::extract_tau(publipha::extract_theta(ma_cuddy2018_no$phma))
publipha::extract_theta(ma_cuddy2018_no$phma)
publipha::extract_theta(ma_cuddy2018_no$phma)[2,]
publipha::extract_theta(ma_cuddy2018_no$phma)[2]
publipha::extract_theta(ma_cuddy2018_no$cma)
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-1.3, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 1,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
axis(side = 4,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
axis(side = 3,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
.H({
jpeg("plots/cuddy2018_posterior.jpg",
width = 8, height = 8, units = 'in', res = 300,
quality = 100)
index = 2
plot(density(extract_theta(ma_cuddy2018$cma, identity, i = index), adjust = 2),
xlim = c(-1.3, 1.3),
main = NA, sub = NA, xlab = "Effect Size", "Density",
lwd = 2,
lty = 1)
lines(density(extract_theta(ma_cuddy2018$phma, identity, i = index), adjust = 2),
lwd = 2,
lty = 2)
lines(density(extract_theta(ma_cuddy2018$psma, identity, i = index), adjust = 2),
lwd = 2,
lty = 3)
axis(side = 3,
at = dat.cuddy2018$yi[index],
label = round(dat.cuddy2018$yi[index], 2))
abline(v = dat.cuddy2018$yi[index], col = "grey")
dev.off()
## Auxilliary values
# publipha::extract_theta(ma_cuddy2018_no$phma)[2]
})
usethis::use_ccby_license()
`options(usethis.full_name = "Jonas Moss")`
options(usethis.full_name = "Jonas Moss")
usethis::use_ccby_license()
